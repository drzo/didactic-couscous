{"ops":[{"attributes":{"font":"monospace"},"insert":"\"\"\"\n"},{"attributes":{"font":"monospace","underline":true},"insert":"Einstein's Puzzle"},{"attributes":{"font":"monospace"},"insert":"\n\n"},{"attributes":{"font":"monospace","underline":true},"insert":"Expecting:"},{"attributes":{"font":"monospace"},"insert":"\n \n"},{"attributes":{"font":"monospace","color":"rgb(0, 138, 0)"},"insert":" HS = [h(yellow,norwegian,cats,water,dunhill),h(blue,dane,horse,tea,blend),h(red,brit,birds,milk,pallmall),h(green,german,zebra,coffee,prince),h(white,swede,dog,beer,bluemaster)]\n Who = german\n"},{"attributes":{"font":"monospace"},"insert":"\"\"\"\nmember(X, [Y|T]) :- X = Y; member(X, T).\n\nappend([],X,X).                            \nappend([X|Y],Z,[X|W]) :- append(Y,Z,W).\n\nselect(X, [X|Tail], Tail).\nselect(Elem, [Head|Tail], [Head|Rest]) :-\n   select(Elem, Tail, Rest).\n   \nselect([A|As],S):- select(A,S,S1),select(As,S1).\nselect([],_). \n\nleft_of(A,B,C):- append(_,[A,B|_],C).  \nnext_to(A,B,C):- left_of(A,B,C) ; left_of(B,A,C).\n\nzebra(Owns, HS):- \n  HS   = [ h(_,norwegian,_,_,_),    h(blue,_,_,_,_),   h(_,_,_,milk,_), _, _], \n  select([ h(red,brit,_,_,_),       h(_,swede,dog,_,_), \n           h(_,dane,_,tea,_),       h(_,german,_,_,prince)], HS),\n  select([ h(_,_,birds,_,pallmall), h(yellow,_,_,_,dunhill),\n           h(_,_,_,beer,bluemaster)],                        HS), \n  left_of( h(green,_,_,coffee,_),   h(white,_,_,_,_),        HS),\n  next_to( h(_,_,_,_,dunhill),      h(_,_,horse,_,_),        HS),\n  next_to( h(_,_,_,_,blend),        h(_,_,cats, _,_),        HS),\n  next_to( h(_,_,_,_,blend),        h(_,_,_,water,_),        HS),\n  member(  h(_,Owns,zebra,_,_),                              HS).\n  \n  \n%% "},{"attributes":{"font":"monospace","color":"rgb(0, 102, 204)","bold":true},"insert":"The query is listed at the end of the code"},{"attributes":{"font":"monospace"},"insert":"\n%%  \n?- zebra(Who,HS).\n"},{"attributes":{"background":"rgb(255,255,255)"},"insert":"\n"}]}